Public Class Main
    'NHC Netmedia Registration System
    'Copyright (C) 2014  Ryan Walmsley

    'This program is free software: you can redistribute it and/or modify
    'it under the terms of the GNU General Public License as published by
    'the Free Software Foundation, either version 3 of the License, or
    '(at your option) any later version.

    'This program is distributed in the hope that it will be useful,
    'but WITHOUT ANY WARRANTY; without even the implied warranty of
    'MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    'GNU General Public License for more details.

    'You should have received a copy of the GNU General Public License
    'along with this program.  If not, see <http://www.gnu.org/licenses/>.

    'Start Program

    'We use the tickets on all of the program, declare this as a public variable
    Public Shared records(0) As String
    'Change this variable to the event name and then compile for use.
    Public Shared eventName As String = "Minecraft Day!"
    'Change this variable to the name of the TXT file you wish to store the data in.
    Public Shared storageFile As String = "recordStorage.txt"

    'Load the form
    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        'Call the function to load all the data
        loadFromTextFile()
        'Lets set all of our tooltips
        toolTip1.SetToolTip(txtBox_id, "This will be generated by the system for you.")
        toolTip1.SetToolTip(txtBox_Name, "Enter your First & Second names in here.")
        toolTip1.SetToolTip(dropDown_dob, "Select the age range you fit in, this is not required.")
        toolTip1.SetToolTip(txtBox_addr1, "Please enter the first line of your postal address.")
        toolTip1.SetToolTip(txtBox_addr2, "Optional, the second line of your postal address.")
        toolTip1.SetToolTip(txtBox_post, "Required, your postcode")
        toolTip1.SetToolTip(dropDown_occ, "Please select your occupation")
        toolTip1.SetToolTip(txtBox_tel, "Either your Telephone or Mobile number.")
        toolTip1.SetToolTip(txtBox_town, "The town your postal address is in.")
        toolTip1.SetToolTip(txtBox_email, "Your email address.")
        toolTip1.SetToolTip(txtBox_com, "The company you work for, only required for when you are a company representative.")
        toolTip1.SetToolTip(dropDown_ref, "How did you find out about this event?.")

        'Lets reset the first tab
        reset_tab1()
        'And on the second tab update the ticket
        updateTicket(0)
        'And update the last tab
        updateTab3()
    End Sub


    Private Sub dropDown_occ_SelectedIndexChanged(sender As Object, e As EventArgs) Handles dropDown_occ.SelectedIndexChanged
        'We want to make the company name editable if occupation is company rep
        If (dropDown_occ.SelectedIndex = 0) Then
            txtBox_com.Enabled = True 'The person is a company rep so enable the box.
        Else
            txtBox_com.Enabled = False 'The person is not a company rep so disable the box.
        End If
    End Sub

    Private Sub button_print_Click(sender As Object, e As EventArgs) Handles button_print.Click
        'Somebody pressed the print ticket button
        'Set the document name to the ticket
        print_ticket_document.DocumentName = "lbl_Ticket"
        'Open up the print dialog to get the printer & settings the user wants to use
        print_ticket_dialog.Document = print_ticket_document
        'If ok then print the document
        If print_ticket_dialog.ShowDialog() = Windows.Forms.DialogResult.OK Then
            print_ticket_document.PrinterSettings = print_ticket_document.PrinterSettings ' Set the settings for the printer to the settings captured from the dialog
            print_ticket_document.Print() ' Then run the print command
        Else
            MsgBox("Either an unknown error occured when printing or printing was counciled.") 'An error or they stopped printing
        End If
    End Sub


    Private Sub print_ticket_document_PrintPage(sender As Object, e As Printing.PrintPageEventArgs) Handles print_ticket_document.PrintPage
        'This handles the print part
        Dim prFont As New Font("Consolas", 18, GraphicsUnit.Point) 'Set the font to the same as in the app
        e.Graphics.DrawString(lbl_Ticket.Text, prFont, Brushes.Black, 50, 50) ' Print the ticket's text, set the font to the font above, in black and start at co-ords 50,50
    End Sub

    Private Sub button_submit_Click(sender As Object, e As EventArgs) Handles button_submit.Click
        'Somebody clicked the submit button
        'Set the error int, if this goes to 1 then there is an error
        Dim errors As Integer = 0
        'This string will store any errors that occur
        Dim errorString As String = ""
        'Register Button has been pushed

        'Validate Full Name
        If (txtBox_Name.Text.Length < 5) Then
            errors = 1
            errorString = errorString + "The full name must be at least 5 Alpha Numeric Characters." + vbCrLf
        End If

        'Date of birth must not be = ""
        If (dropDown_dob.Text = "Select") Then
            errors = 1
            errorString = errorString + "You must select a date of birth date range." + vbCrLf
        End If
        'Address line 1 must have 5 alphanumeric
        If (txtBox_addr1.Text.Length < 5) Then
            errors = 1
            errorString = errorString + "You must have 5 alpha numeric characters for your address " + vbCrLf
        End If
        'Ignore address line 2
        'Postcode validation, at least 6 chars
        If (txtBox_post.Text.Length < 6 Or txtBox_post.Text.Length > 8) Then
            errors = 1
            errorString = errorString + "You must have between 6-8 alpha numeric characters for the postcode" + vbCrLf
        End If

        'Town Validation
        If (txtBox_town.Text.Length < 5) Then
            errors = 1
            errorString = errorString + "The town must have 5 alpha numeric characters." + vbCrLf

        End If

        'Telephone Validation
        If (txtBox_tel.Text.Length < 11) Then
            errors = 1
            errorString = errorString + "The telephone must have 11 digits" + vbCrLf
        End If

        'Email validation
        'Split into array for first section
        Dim emailPart1(1) As String ' Part 1 temp array
        emailPart1 = Split(txtBox_email.Text, "@") 'Split by the @ symbol
        'Then split the second half by the .
        If (emailPart1.Length > 1) Then 'The second half exsists so an @ is in the string
            Dim emailPart2(2) As String 'Set the temp array
            emailPart2 = Split(emailPart1(1), ".") 'Then split by a .
            If (emailPart2.Length > 1) Then
            Else
                If (emailPart1(1).Length < 1 Or emailPart2(0).Length < 1 Or emailPart2(1).Length < 1) Then 'If any are under 1 char in length
                    errors = 1 'Cause Error
                    errorString = errorString + "Email is invalid, please check it" + vbCrLf 'Error log
                Else

                    errors = 1 'Cause Error
                    errorString = errorString + "Email is invalid, please check it" + vbCrLf 'Error log
                End If

            
            End If
        Else
            errors = 1 'Error of no second part
            errorString = errorString + "Email is invalid, please check it" + vbCrLf 'Error log
        End If


        'Dropbox occupation
        If (dropDown_occ.Text = "Select") Then
            errors = 1
            errorString = errorString + "You must select an occupation." + vbCrLf
        End If
        'Company
        If (dropDown_occ.Text = "Company Rep") Then
            If (txtBox_com.Text.Length < 5) Then
                errors = 1
                errorString = errorString + "You must enter your company name." + vbCrLf
            End If
        End If
        If (dropDown_ref.Text = "Select") Then
            errors = 1
            errorString = errorString + "You must tell us how you found out about the event." + vbCrLf
        End If

        'Then if no errors save record then reset
        If (errors = 0) Then
            'Do stuff
            'Save the ticket! 
            'We only need to save "Ryan Walmsley,Student,IT Gaming Event,04/04/2014,Ryanteck LTD."
            Dim newTicket As String
            newTicket = txtBox_Name.Text + "," + dropDown_occ.SelectedIndex.ToString + "," + eventName + "," + Date.Today.ToString + "," + txtBox_com.Text
            'Now add it as a new record
            Dim id As Integer = records.Length
            'Then reset the records to have a new ID
            ReDim Preserve records(id)
            records(id) = newTicket
            'Finally re-write all tickets to txt
            writeTickets()


            'Reset the tab
            reset_tab1()
            'Update the ticket list
            updateTab3()
            'Set ID to the ID just entered
            spinner_Id.Value = id
            updateTicket(id)
            'Update the third tab
            updateTab3()

            'Finally switch to ticket view

            tabController.SelectedTab = TabPage2

        Else
            MsgBox(errorString, 0, "An Error Occured")
        End If



    End Sub

    Private Sub reset_tab1()
        'Reset the full name to ""
        txtBox_Name.Text = ""
        'set date of birth to "Select"
        dropDown_dob.Text = "Select"
        'Set Address lines 1 & 2 to ""
        txtBox_addr1.Text = ""
        txtBox_addr2.Text = ""
        'Postcode reset
        txtBox_post.Text = ""
        'Town Reset
        txtBox_town.Text = ""
        'Telephone Reset
        txtBox_tel.Text = ""
        'Email Reset
        txtBox_email.Text = ""
        'Dropbox occupation
        dropDown_occ.Text = "Select"
        'Company
        txtBox_com.Text = "N/A"
        'Refer
        dropDown_ref.Text = "Select"
        'Disable company rep box
        txtBox_com.Enabled = False
        'Set email to default, rest as none
        radio_Email.Checked = True
        radio_phone.Checked = False
        radio_post.Checked = False
        radio_sms.Checked = False
        'Finally get a new ID
        txtBox_id.Text = records.Length.ToString("D4")
        'Oh and set the maximum ID Number
        spinner_Id.Maximum = (records.Length - 1)
    End Sub




    Private Sub spinner_Id_ValueChanged(sender As Object, e As EventArgs) Handles spinner_Id.ValueChanged
        updateTicket(spinner_Id.Value)
    End Sub
    Private Sub updateTicket(id As Integer)
        'Value has been changed, update the record
        'First get the ticket record from the spinner's ID
        Dim ticketData As String = records(id)
        'Then split the ticket record into each component
        Dim ticketArray(0) As String
        ticketArray = Split(ticketData, ",")
        'Get the ID of the ticket based on the spinner
        Dim ticketID As Integer = spinner_Id.Value
        'Dim the ticket which will then contain the ticket's data
        Dim ticket As String
        'Set the unique ID and have 4 digits
        ticket = "Unique ID: " + ticketID.ToString("D4")
        ticket = ticket + vbCrLf + "Full Name: " + ticketArray(0) 'Add the name
        ticket = ticket + vbCrLf + "Occupation: " + ticketArray(1) ' Add the Occupation
        ticket = ticket + vbCrLf + "Event: " + ticketArray(2) ' Add the event name
        ticket = ticket + vbCrLf + "Date: " + ticketArray(3) ' Add the date
        If (ticketArray(4) <> "N/A") Then
            ticket = ticket + vbCrLf + "Company Name: " + ticketArray(4) ' The user's company is not N/A so add to ticket
        End If


        lbl_Ticket.Text = ticket 'Finally output the tickets data to the screen

    End Sub

    Private Sub loadFromTextFile()
        'Set the data file as a glob
        'Storage file
        Dim rawData As String
        'Load the data
        rawData = My.Computer.FileSystem.ReadAllText(storageFile)
        'Remove the last semi colon from the end
        rawData = rawData.Substring(0, (rawData.Length - 1))
        'Split all the records into an array
        records = Split(rawData, ";")
    End Sub

    Private Sub btn_Reload_Click(sender As Object, e As EventArgs) Handles btn_Reload.Click
        'This just force reloads from file
        loadFromTextFile()
        'Update the last tab
        updateTab3()
    End Sub

    Private Sub writeTickets()
        'Write all of the records to the storage file
        'This string will hold the new data for the file which will be created below
        Dim newTicketFile As String = ""
        '
        For Each ticket As String In records
            newTicketFile = newTicketFile + ticket + ";"
        Next
        My.Computer.FileSystem.WriteAllText(storageFile, newTicketFile, False)
    End Sub

    Private Sub updateTab3()
        'Update the list tab to show all of the ticket records
        'Set ticket to string, this will store that ticket's date temproarily
        'Dim Ticket As String
        ' 'Set a ticket array to store the sub array of the record
        Dim TicketArray(0) As String
        'Set a counter to calculate the ID of that ticket
        Dim uniqueid As Integer = 0
        'run the ticket population loop
        'Remove all data
        list_Tab3.Items.Clear()


        For Each ticketData As String In records
            'Split that record up by the comma
            TicketArray = Split(ticketData, ",")
            'String concatnate the ticket up
            'Ticket = +"," + TicketArray(1) + "," + TicketArray(4) + "," + uniqueid.ToString("D4")
            'Add that ticket to the list
            'list_Tab3.Items.Add(Ticket)
            Dim index As Integer

            'remove all items first


            index = list_Tab3.Items.Add(TicketArray(0)).Index

            If (TicketArray(1) = 0) Then
                list_Tab3.Items.Item(index).SubItems.Add("Company Rep")
            ElseIf (TicketArray(1) = 1) Then
                list_Tab3.Items.Item(index).SubItems.Add("Induvidual")
            Else
                list_Tab3.Items.Item(index).SubItems.Add("Student")
            End If

            list_Tab3.Items.Item(index).SubItems.Add(TicketArray(4))
            list_Tab3.Items.Item(index).SubItems.Add(uniqueid.ToString("D4"))
            'add one to the unique ID counter
            uniqueid = uniqueid + 1
        Next


    End Sub

End Class
